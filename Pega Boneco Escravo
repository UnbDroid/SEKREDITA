#define BT_CONN 1
#define OUT_MBOX 1
#define IN_MBOX 5
#define Ultra_Boneco_Esquerda IN_1
#define Ultra_Boneco_Direita IN_2
#define Ultra_Boneco_Frente IN_3
#define PORTA_E OUT_A
#define PORTA_D OUT_C
#define RAMPA OUT_B
#define PORTAS OUT_AC
#define Distancia_do_Boneco 20
#define esquerda 1
#define frente 2
#define direita 3
#define PRETO    1
#define AZUL     2
#define VERDE    3
#define AMARELO  4
#define VERMELHO 5
#define BRANCO   6
#define FORA     7

sub BTCheck(int conn){
	if (!BluetoothStatus(conn)==NO_ERR){
		ClearScreen();
		TextOut(5,LCD_LINE2,"Erro");
		Wait(1000);
		Stop(true);
	 }
}

void pega_boneco(){
	int i=0;
	ClearScreen();
	TextOut(10,LCD_LINE1, "Esperando o Mestre");
	while(ReceiveRemoteNumber(IN_MBOX,true, i) == STAT_MSG_EMPTY_MAILBOX);

	while(SensorUS(Ultra_Boneco_Frente)>12){
		ClearScreen();
		TextOut(10,LCD_LINE1, "Indo para frente");	
	}

	SendResponseNumber(OUT_MBOX, 2);
	while(MotorRotationCount(PORTA_D) > -90){
		OnFwd(PORTA_D, -60);
		OnFwd(PORTA_E, -55);
	}
	Off(PORTAS);
	while(MotorRotationCount(RAMPA) < 40){
		OnFwd(RAMPA, 40);
	}
	Wait(3000);
}


task main(){
	int i=1;
	SetSensorLowspeed(Ultra_Boneco_Frente);
	SetSensorLowspeed(Ultra_Boneco_Direita);
	SetSensorLowspeed(Ultra_Boneco_Esquerda);

	BTCheck(0);

	while(1){
		if(SensorUS(Ultra_Boneco_Direita) < 15 || SensorUS(Ultra_Boneco_Esquerda) < 15){
			if(SensorUS(Ultra_Boneco_Esquerda) < 15){		
				SendResponseNumber(OUT_MBOX, 1);
			} else{
				SendResponseNumber(OUT_MBOX, 3);
			}
			pega_boneco();
		}
	}
}
