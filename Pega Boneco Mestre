#define BT_CONN 1
#define OUT_MBOX 5
#define IN_MBOX 1
#define CorE IN_1
#define CorD IN_2
#define Ultra_chao_esquerda IN_3
#define Ultra_chao_direita IN_4
#define RodaE OUT_C
#define RodaD OUT_A
#define Rodas OUT_AC
#define Distancia_do_Boneco 20
#define esquerda 1
#define frente 2
#define direita 3
#define PRETO    1
#define AZUL     2
#define VERDE    3
#define AMARELO  4
#define VERMELHO 5
#define BRANCO   6
#define FORA     7

int Offset = 0;

sub BTCheck(int conn){
	if (!BluetoothStatus(conn)==NO_ERR){
		ClearScreen();
		TextOut(5,LCD_LINE2,"Erro");
		Wait(1000);
		Stop(true);
	 }
}

void gira90(int lado){
	if(lado == 1){
		while(MotorRotationCount(RodaE) - Offset < 205){
			OnFwd(RodaE, 50);
			OnFwd(RodaD, -50);
		}
	}else{
		while(MotorRotationCount(RodaE) - Offset > -205){
			OnFwd(RodaE, -50);
			OnFwd(RodaD, 50);
		}
	}
	Offset = MotorRotationCount(RodaE);
	Off(Rodas);
}

void pega_boneco(int lado){
	int i=0;
	while(MotorRotationCount(RodaE) - Offset < 90){
	OnFwd(Rodas, 50);
	}
	Off(Rodas);
	Offset = MotorRotationCount(RodaE);
	gira90(lado);
	SendRemoteNumber(1, OUT_MBOX, 3);
	while(ReceiveRemoteNumber(IN_MBOX,true,i) != NO_ERR){
		OnFwd(Rodas, -50);
	}
	Off(Rodas);
	Stop(true);
}


task main(){

int i=0;

	BTCheck(1);
	SetSensorLowspeed(Ultra_chao_direita);
	SetSensorLowspeed(Ultra_chao_esquerda);

	while(1){
		OnFwd(Rodas, -50);
		if(ReceiveRemoteNumber(IN_MBOX,true,i) == NO_ERR){
			Offset = MotorRotationCount(RodaE);
			pega_boneco(i);
		}
	}



}
